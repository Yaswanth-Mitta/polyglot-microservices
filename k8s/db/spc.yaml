# -----------------------------
# Persistent Volumes (PVs)
# -----------------------------
apiVersion: v1
kind: PersistentVolume
metadata:
  name: notes-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/home/ubuntu/data/notes"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: todo-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/home/ubuntu/data/todo"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: user-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/home/ubuntu/data/user"

# -----------------------------
# Notes DB (MongoDB)
# -----------------------------
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: notes-db
spec:
  serviceName: "notes-db"
  replicas: 1
  selector:
    matchLabels:
      app: notes-db
  template:
    metadata:
      labels:
        app: notes-db
    spec:
      containers:
        - name: notes-db
          image: mongo:latest
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongo-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: notes-db
spec:
  clusterIP: None
  selector:
    app: notes-db
  ports:
    - port: 27017
      targetPort: 27017

# -----------------------------
# Todo DB (MongoDB)
# -----------------------------
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: todo-db
spec:
  serviceName: "todo-db"
  replicas: 1
  selector:
    matchLabels:
      app: todo-db
  template:
    metadata:
      labels:
        app: todo-db
    spec:
      containers:
        - name: todo-db
          image: mongo:latest
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongo-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: todo-db
spec:
  clusterIP: None
  selector:
    app: todo-db
  ports:
    - port: 27017
      targetPort: 27017

# -----------------------------
# User DB (MongoDB)
# -----------------------------
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: user-db
spec:
  serviceName: "user-db"
  replicas: 1
  selector:
    matchLabels:
      app: user-db
  template:
    metadata:
      labels:
        app: user-db
    spec:
      containers:
        - name: user-db
          image: mongo:latest
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongo-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: user-db
spec:
  clusterIP: None
  selector:
    app: user-db
  ports:
    - port: 27017
      targetPort: 27017
